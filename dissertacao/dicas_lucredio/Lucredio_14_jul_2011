Testes: exploratorios, estudo de caso, experimento controlado, comparativo, de campo

- Colocar código fonte real
- Uma outra pergunta é: o quao eu consigo variar a gramatica?
- Nao tem problema eu ter analisa 10 casos de aplicações (que nao existem) e dizer que só gera codigo fonte de 3 casos
- O ideal seria comparar eclipse+svn Vs CoMDD, mas posso tambem fazer só uma avaliação do CoMDD, da forma como as pessoas colaboraram, avaliar os pontos positivos e negativos. Uma coisa boa é ver como as pessoas colaboram na wiki sem edição de tempo real 
- Preciso pensar direitinho nos meus experimentos,nos testes que vou fazer
- O codigo fonte gertado tem q funcionar, tenho q validar ele, colocar num simulador ou algo parecido
- Falar: MDD aumenta o nivel de abstracao permitindo que o especialista possa programar e nao somento o desenvolvedor. Uma criança pode programar usando uma wiki mas nao usando eclipse e svn, mesmo que no eclipse seja modelos. A crianca é do dominio e o desenvolvedor o especialista
- Ver trabalhos de outros experimentos de colaboração na wiki. Como as pessoas colaboram na wiki?
- Revisão: Falar de DSLs, Wikis, MDD, Templates
- Pesquisa bibliografica:
	MDD, Wiki, geração de código fonte
	Colaboracao e MDD: SVN
	Colaboração na wiki
- nivel da solução: java, c .... nivel do problema: UML, p ex


- Se DER colocar: 
	Retorno de erros (validação do modelo)
	Edição de subartefatos e que compoem um artefato que ira gerar o codigo
	Ed em tempo real 
Mas o mais importante é o codigo gerado ser o real e avaliar


- Hipotese:
1- Código-fonte é mais complicado de ser desenvolvido por mais de uma pessoa, logo é também menos reutilizável. Só o especialista consegue fazer e nao o cara do dominio.
2- Modelos são mais colaborativos e reusáveis (nao falar em reuso pra nao criar uma expectativa errada pro leitor)
3- Artefatos online (wikis, gdocs) são mais colaborativos que controles de versao, bug tracks, ou outras ferramentas de gestao de configuração por terem interfaces mais amigáveis -> Assim a Web aumenta ainda mais colaboração (cooperação)
4- LOGO: MDD na Wiki traz mais colaboração, cooperação e produtividade, no desenvolvimento de software -> isso que tenho q avaliar , do que traria com eclipse e svn (ideal de avaliar)


Sintaxe concreta: gramática, visual
Sintaxe abstrata: metamodelo (parecido com o diagrama de classes)




